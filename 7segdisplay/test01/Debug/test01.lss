
test01.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000312  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002e  00800060  00000312  000003a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  0080008e  0080008e  000003d4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000404  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000440  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b12  00000000  00000000  000004a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006b5  00000000  00000000  00000fb2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c7  00000000  00000000  00001667  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a8  00000000  00000000  00001b30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000041a  00000000  00000000  00001bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005f6  00000000  00000000  00001ff2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000025e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e1       	ldi	r30, 0x12	; 18
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 38       	cpi	r26, 0x8E	; 142
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae e8       	ldi	r26, 0x8E	; 142
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	af 38       	cpi	r26, 0x8F	; 143
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 3b 01 	call	0x276	; 0x276 <main>
  8a:	0c 94 87 01 	jmp	0x30e	; 0x30e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <initialize>:
  92:	8f e0       	ldi	r24, 0x0F	; 15
  94:	81 bb       	out	0x11, r24	; 17
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	84 bb       	out	0x14, r24	; 20
  9a:	85 bb       	out	0x15, r24	; 21
  9c:	08 95       	ret

0000009e <led_display>:
  9e:	ef 92       	push	r14
  a0:	ff 92       	push	r15
  a2:	0f 93       	push	r16
  a4:	1f 93       	push	r17
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	7c 01       	movw	r14, r24
  ac:	0e 94 49 00 	call	0x92	; 0x92 <initialize>
  b0:	c0 e6       	ldi	r28, 0x60	; 96
  b2:	d0 e0       	ldi	r29, 0x00	; 0
  b4:	88 81       	ld	r24, Y
  b6:	82 bb       	out	0x12, r24	; 18
  b8:	c7 01       	movw	r24, r14
  ba:	68 ee       	ldi	r22, 0xE8	; 232
  bc:	73 e0       	ldi	r23, 0x03	; 3
  be:	0e 94 5f 01 	call	0x2be	; 0x2be <__divmodhi4>
  c2:	66 0f       	add	r22, r22
  c4:	77 1f       	adc	r23, r23
  c6:	fb 01       	movw	r30, r22
  c8:	e8 59       	subi	r30, 0x98	; 152
  ca:	ff 4f       	sbci	r31, 0xFF	; 255
  cc:	40 81       	ld	r20, Z
  ce:	45 bb       	out	0x15, r20	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d0:	ef e1       	ldi	r30, 0x1F	; 31
  d2:	fe e4       	ldi	r31, 0x4E	; 78
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <led_display+0x36>
  d8:	00 c0       	rjmp	.+0      	; 0xda <led_display+0x3c>
  da:	00 00       	nop
  dc:	4a 81       	ldd	r20, Y+2	; 0x02
  de:	42 bb       	out	0x12, r20	; 18
  e0:	04 e6       	ldi	r16, 0x64	; 100
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	b8 01       	movw	r22, r16
  e6:	0e 94 5f 01 	call	0x2be	; 0x2be <__divmodhi4>
  ea:	fb 01       	movw	r30, r22
  ec:	ee 0f       	add	r30, r30
  ee:	ff 1f       	adc	r31, r31
  f0:	e8 59       	subi	r30, 0x98	; 152
  f2:	ff 4f       	sbci	r31, 0xFF	; 255
  f4:	80 81       	ld	r24, Z
  f6:	85 bb       	out	0x15, r24	; 21
  f8:	8f e1       	ldi	r24, 0x1F	; 31
  fa:	9e e4       	ldi	r25, 0x4E	; 78
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <led_display+0x5e>
 100:	00 c0       	rjmp	.+0      	; 0x102 <led_display+0x64>
 102:	00 00       	nop
 104:	8c 81       	ldd	r24, Y+4	; 0x04
 106:	82 bb       	out	0x12, r24	; 18
 108:	c7 01       	movw	r24, r14
 10a:	b8 01       	movw	r22, r16
 10c:	0e 94 5f 01 	call	0x2be	; 0x2be <__divmodhi4>
 110:	0a e0       	ldi	r16, 0x0A	; 10
 112:	10 e0       	ldi	r17, 0x00	; 0
 114:	b8 01       	movw	r22, r16
 116:	0e 94 5f 01 	call	0x2be	; 0x2be <__divmodhi4>
 11a:	fb 01       	movw	r30, r22
 11c:	ee 0f       	add	r30, r30
 11e:	ff 1f       	adc	r31, r31
 120:	e8 59       	subi	r30, 0x98	; 152
 122:	ff 4f       	sbci	r31, 0xFF	; 255
 124:	80 81       	ld	r24, Z
 126:	85 bb       	out	0x15, r24	; 21
 128:	ef e1       	ldi	r30, 0x1F	; 31
 12a:	fe e4       	ldi	r31, 0x4E	; 78
 12c:	31 97       	sbiw	r30, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <led_display+0x8e>
 130:	00 c0       	rjmp	.+0      	; 0x132 <led_display+0x94>
 132:	00 00       	nop
 134:	8e 81       	ldd	r24, Y+6	; 0x06
 136:	82 bb       	out	0x12, r24	; 18
 138:	c7 01       	movw	r24, r14
 13a:	b8 01       	movw	r22, r16
 13c:	0e 94 5f 01 	call	0x2be	; 0x2be <__divmodhi4>
 140:	fc 01       	movw	r30, r24
 142:	ee 0f       	add	r30, r30
 144:	ff 1f       	adc	r31, r31
 146:	e8 59       	subi	r30, 0x98	; 152
 148:	ff 4f       	sbci	r31, 0xFF	; 255
 14a:	80 81       	ld	r24, Z
 14c:	85 bb       	out	0x15, r24	; 21
 14e:	8f e1       	ldi	r24, 0x1F	; 31
 150:	9e e4       	ldi	r25, 0x4E	; 78
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <led_display+0xb4>
 156:	00 c0       	rjmp	.+0      	; 0x158 <led_display+0xba>
 158:	00 00       	nop
 15a:	df 91       	pop	r29
 15c:	cf 91       	pop	r28
 15e:	1f 91       	pop	r17
 160:	0f 91       	pop	r16
 162:	ff 90       	pop	r15
 164:	ef 90       	pop	r14
 166:	08 95       	ret

00000168 <led_display_succ>:
 168:	0e 94 49 00 	call	0x92	; 0x92 <initialize>
 16c:	a0 e6       	ldi	r26, 0x60	; 96
 16e:	b0 e0       	ldi	r27, 0x00	; 0
 170:	8c 91       	ld	r24, X
 172:	82 bb       	out	0x12, r24	; 18
 174:	e8 e6       	ldi	r30, 0x68	; 104
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	86 8d       	ldd	r24, Z+30	; 0x1e
 17a:	85 bb       	out	0x15, r24	; 21
 17c:	8f e1       	ldi	r24, 0x1F	; 31
 17e:	9e e4       	ldi	r25, 0x4E	; 78
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <led_display_succ+0x18>
 184:	00 c0       	rjmp	.+0      	; 0x186 <led_display_succ+0x1e>
 186:	00 00       	nop
 188:	12 96       	adiw	r26, 0x02	; 2
 18a:	8c 91       	ld	r24, X
 18c:	12 97       	sbiw	r26, 0x02	; 2
 18e:	82 bb       	out	0x12, r24	; 18
 190:	80 a1       	ldd	r24, Z+32	; 0x20
 192:	85 bb       	out	0x15, r24	; 21
 194:	8f e1       	ldi	r24, 0x1F	; 31
 196:	9e e4       	ldi	r25, 0x4E	; 78
 198:	01 97       	sbiw	r24, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <led_display_succ+0x30>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <led_display_succ+0x36>
 19e:	00 00       	nop
 1a0:	14 96       	adiw	r26, 0x04	; 4
 1a2:	8c 91       	ld	r24, X
 1a4:	14 97       	sbiw	r26, 0x04	; 4
 1a6:	82 bb       	out	0x12, r24	; 18
 1a8:	86 89       	ldd	r24, Z+22	; 0x16
 1aa:	85 bb       	out	0x15, r24	; 21
 1ac:	8f e1       	ldi	r24, 0x1F	; 31
 1ae:	9e e4       	ldi	r25, 0x4E	; 78
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <led_display_succ+0x48>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <led_display_succ+0x4e>
 1b6:	00 00       	nop
 1b8:	16 96       	adiw	r26, 0x06	; 6
 1ba:	8c 91       	ld	r24, X
 1bc:	16 97       	sbiw	r26, 0x06	; 6
 1be:	82 bb       	out	0x12, r24	; 18
 1c0:	86 89       	ldd	r24, Z+22	; 0x16
 1c2:	85 bb       	out	0x15, r24	; 21
 1c4:	8f e1       	ldi	r24, 0x1F	; 31
 1c6:	9e e4       	ldi	r25, 0x4E	; 78
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <led_display_succ+0x60>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <led_display_succ+0x66>
 1ce:	00 00       	nop
 1d0:	16 96       	adiw	r26, 0x06	; 6
 1d2:	8c 91       	ld	r24, X
 1d4:	82 bb       	out	0x12, r24	; 18
 1d6:	82 a1       	ldd	r24, Z+34	; 0x22
 1d8:	85 bb       	out	0x15, r24	; 21
 1da:	8f e1       	ldi	r24, 0x1F	; 31
 1dc:	9e e4       	ldi	r25, 0x4E	; 78
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <led_display_succ+0x76>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <led_display_succ+0x7c>
 1e4:	00 00       	nop
 1e6:	08 95       	ret

000001e8 <led_display_fail>:
 1e8:	0e 94 49 00 	call	0x92	; 0x92 <initialize>
 1ec:	a0 e6       	ldi	r26, 0x60	; 96
 1ee:	b0 e0       	ldi	r27, 0x00	; 0
 1f0:	8c 91       	ld	r24, X
 1f2:	82 bb       	out	0x12, r24	; 18
 1f4:	e8 e6       	ldi	r30, 0x68	; 104
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	80 8d       	ldd	r24, Z+24	; 0x18
 1fa:	85 bb       	out	0x15, r24	; 21
 1fc:	8f e1       	ldi	r24, 0x1F	; 31
 1fe:	9e e4       	ldi	r25, 0x4E	; 78
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	f1 f7       	brne	.-4      	; 0x200 <led_display_fail+0x18>
 204:	00 c0       	rjmp	.+0      	; 0x206 <led_display_fail+0x1e>
 206:	00 00       	nop
 208:	12 96       	adiw	r26, 0x02	; 2
 20a:	8c 91       	ld	r24, X
 20c:	12 97       	sbiw	r26, 0x02	; 2
 20e:	82 bb       	out	0x12, r24	; 18
 210:	84 89       	ldd	r24, Z+20	; 0x14
 212:	85 bb       	out	0x15, r24	; 21
 214:	8f e1       	ldi	r24, 0x1F	; 31
 216:	9e e4       	ldi	r25, 0x4E	; 78
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	f1 f7       	brne	.-4      	; 0x218 <led_display_fail+0x30>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <led_display_fail+0x36>
 21e:	00 00       	nop
 220:	14 96       	adiw	r26, 0x04	; 4
 222:	8c 91       	ld	r24, X
 224:	14 97       	sbiw	r26, 0x04	; 4
 226:	82 bb       	out	0x12, r24	; 18
 228:	82 8d       	ldd	r24, Z+26	; 0x1a
 22a:	85 bb       	out	0x15, r24	; 21
 22c:	8f e1       	ldi	r24, 0x1F	; 31
 22e:	9e e4       	ldi	r25, 0x4E	; 78
 230:	01 97       	sbiw	r24, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <led_display_fail+0x48>
 234:	00 c0       	rjmp	.+0      	; 0x236 <led_display_fail+0x4e>
 236:	00 00       	nop
 238:	16 96       	adiw	r26, 0x06	; 6
 23a:	8c 91       	ld	r24, X
 23c:	82 bb       	out	0x12, r24	; 18
 23e:	84 8d       	ldd	r24, Z+28	; 0x1c
 240:	85 bb       	out	0x15, r24	; 21
 242:	8f e1       	ldi	r24, 0x1F	; 31
 244:	9e e4       	ldi	r25, 0x4E	; 78
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <led_display_fail+0x5e>
 24a:	00 c0       	rjmp	.+0      	; 0x24c <led_display_fail+0x64>
 24c:	00 00       	nop
 24e:	08 95       	ret

00000250 <check_pw>:
	  //decoding msg
	  
	  if(msg[0]=='1'&& msg[1]=='2'&& msg[2]=='3' && msg[3]=='4')     //1st 2nd 3rd and 4th digit act as password
	  {
		  tran_amt= (msg[6]-48)*100+(msg[7]-48)*10+(msg[8]-48);
		  if(balance>tran_amt)
 250:	80 91 8c 00 	lds	r24, 0x008C	; 0x80008c <balance>
 254:	90 91 8d 00 	lds	r25, 0x008D	; 0x80008d <balance+0x1>
 258:	85 36       	cpi	r24, 0x65	; 101
 25a:	91 05       	cpc	r25, r1
 25c:	4c f0       	brlt	.+18     	; 0x270 <check_pw+0x20>
		  {
			  if(msg[9]=='1')                           //1: Recharge and 0: pay in the 10th digit
				 balance+=tran_amt;
 25e:	8c 59       	subi	r24, 0x9C	; 156
 260:	9f 4f       	sbci	r25, 0xFF	; 255
 262:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <balance+0x1>
 266:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <balance>
			  else
				 balance-=tran_amt;
			 flag ='1';
 26a:	81 e3       	ldi	r24, 0x31	; 49
 26c:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <__data_end>
		  }
	  }
	 else
	    flag ='0';
return flag;	
}
 270:	80 91 8e 00 	lds	r24, 0x008E	; 0x80008e <__data_end>
 274:	08 95       	ret

00000276 <main>:


int main()
{	
	uint8_t counter=0;
	TCCR1B |= 1<<CS10;	 
 276:	8e b5       	in	r24, 0x2e	; 46
 278:	81 60       	ori	r24, 0x01	; 1
 27a:	8e bd       	out	0x2e, r24	; 46
	flag = check_pw();
 27c:	0e 94 28 01 	call	0x250	; 0x250 <check_pw>
 280:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <__data_end>
}


int main()
{	
	uint8_t counter=0;
 284:	c0 e0       	ldi	r28, 0x00	; 0
 286:	0a c0       	rjmp	.+20     	; 0x29c <main+0x26>
	flag = check_pw();
	while(counter<60)
	{
		while(TCNT1<60000)
		{
			counter++;
 288:	cf 5f       	subi	r28, 0xFF	; 255
			if(flag=='1')
 28a:	80 91 8e 00 	lds	r24, 0x008E	; 0x80008e <__data_end>
 28e:	81 33       	cpi	r24, 0x31	; 49
 290:	19 f4       	brne	.+6      	; 0x298 <main+0x22>
			led_display_succ();
 292:	0e 94 b4 00 	call	0x168	; 0x168 <led_display_succ>
 296:	02 c0       	rjmp	.+4      	; 0x29c <main+0x26>
			else
			led_display_fail();
 298:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <led_display_fail>
	uint8_t counter=0;
	TCCR1B |= 1<<CS10;	 
	flag = check_pw();
	while(counter<60)
	{
		while(TCNT1<60000)
 29c:	8c b5       	in	r24, 0x2c	; 44
 29e:	9d b5       	in	r25, 0x2d	; 45
 2a0:	80 36       	cpi	r24, 0x60	; 96
 2a2:	9a 4e       	sbci	r25, 0xEA	; 234
 2a4:	88 f3       	brcs	.-30     	; 0x288 <main+0x12>
			if(flag=='1')
			led_display_succ();
			else
			led_display_fail();
		}
		TCNT1 =0;
 2a6:	1d bc       	out	0x2d, r1	; 45
 2a8:	1c bc       	out	0x2c, r1	; 44
		counter ++;
 2aa:	cf 5f       	subi	r28, 0xFF	; 255
int main()
{	
	uint8_t counter=0;
	TCCR1B |= 1<<CS10;	 
	flag = check_pw();
	while(counter<60)
 2ac:	cc 33       	cpi	r28, 0x3C	; 60
 2ae:	b0 f3       	brcs	.-20     	; 0x29c <main+0x26>
		counter ++;
	}
	
	while(1)
	{
		led_display(balance); 		
 2b0:	80 91 8c 00 	lds	r24, 0x008C	; 0x80008c <balance>
 2b4:	90 91 8d 00 	lds	r25, 0x008D	; 0x80008d <balance+0x1>
 2b8:	0e 94 4f 00 	call	0x9e	; 0x9e <led_display>
 2bc:	f9 cf       	rjmp	.-14     	; 0x2b0 <main+0x3a>

000002be <__divmodhi4>:
 2be:	97 fb       	bst	r25, 7
 2c0:	07 2e       	mov	r0, r23
 2c2:	16 f4       	brtc	.+4      	; 0x2c8 <__divmodhi4+0xa>
 2c4:	00 94       	com	r0
 2c6:	07 d0       	rcall	.+14     	; 0x2d6 <__divmodhi4_neg1>
 2c8:	77 fd       	sbrc	r23, 7
 2ca:	09 d0       	rcall	.+18     	; 0x2de <__divmodhi4_neg2>
 2cc:	0e 94 73 01 	call	0x2e6	; 0x2e6 <__udivmodhi4>
 2d0:	07 fc       	sbrc	r0, 7
 2d2:	05 d0       	rcall	.+10     	; 0x2de <__divmodhi4_neg2>
 2d4:	3e f4       	brtc	.+14     	; 0x2e4 <__divmodhi4_exit>

000002d6 <__divmodhi4_neg1>:
 2d6:	90 95       	com	r25
 2d8:	81 95       	neg	r24
 2da:	9f 4f       	sbci	r25, 0xFF	; 255
 2dc:	08 95       	ret

000002de <__divmodhi4_neg2>:
 2de:	70 95       	com	r23
 2e0:	61 95       	neg	r22
 2e2:	7f 4f       	sbci	r23, 0xFF	; 255

000002e4 <__divmodhi4_exit>:
 2e4:	08 95       	ret

000002e6 <__udivmodhi4>:
 2e6:	aa 1b       	sub	r26, r26
 2e8:	bb 1b       	sub	r27, r27
 2ea:	51 e1       	ldi	r21, 0x11	; 17
 2ec:	07 c0       	rjmp	.+14     	; 0x2fc <__udivmodhi4_ep>

000002ee <__udivmodhi4_loop>:
 2ee:	aa 1f       	adc	r26, r26
 2f0:	bb 1f       	adc	r27, r27
 2f2:	a6 17       	cp	r26, r22
 2f4:	b7 07       	cpc	r27, r23
 2f6:	10 f0       	brcs	.+4      	; 0x2fc <__udivmodhi4_ep>
 2f8:	a6 1b       	sub	r26, r22
 2fa:	b7 0b       	sbc	r27, r23

000002fc <__udivmodhi4_ep>:
 2fc:	88 1f       	adc	r24, r24
 2fe:	99 1f       	adc	r25, r25
 300:	5a 95       	dec	r21
 302:	a9 f7       	brne	.-22     	; 0x2ee <__udivmodhi4_loop>
 304:	80 95       	com	r24
 306:	90 95       	com	r25
 308:	bc 01       	movw	r22, r24
 30a:	cd 01       	movw	r24, r26
 30c:	08 95       	ret

0000030e <_exit>:
 30e:	f8 94       	cli

00000310 <__stop_program>:
 310:	ff cf       	rjmp	.-2      	; 0x310 <__stop_program>
